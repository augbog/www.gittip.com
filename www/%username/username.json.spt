from aspen import Response, log_dammit
from gittip.models.participant import Participant
from gittip.models.participant import ( UsernameContainsInvalidCharacters
                                      , UsernameIsRestricted
                                      , UsernameAlreadyTaken
                                      , UsernameTooLong
                                       )


[-----------------------------------------------------------------------------]

if user.ANON:
    raise Response(404)

new_username = request.body['username']

try:
    old_username = user.participant.username
    user.participant.change_username(new_username)
    response.body = {"username": new_username}
    log_dammit("user with username %s has become username %s" % (old_username, new_username))
except (UsernameContainsInvalidCharacters, UsernameIsRestricted):
    raise Response(400)
except UsernameAlreadyTaken:
    raise Response(409)
except UsernameTooLong:
    raise Response(413)
